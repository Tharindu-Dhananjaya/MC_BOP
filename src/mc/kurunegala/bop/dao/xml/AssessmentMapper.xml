<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mc.kurunegala.bop.dao.AssessmentMapper">
	<resultMap id="BaseResultMap"
		type="mc.kurunegala.bop.model.Assessment">
		<id column="idAssessment" jdbcType="INTEGER"
			property="idassessment" />
		<result column="Customer_idCustomer" jdbcType="INTEGER"
			property="customerIdcustomer" />
		<result column="Ward_idWard" jdbcType="INTEGER"
			property="wardIdward" />
		<result column="Street_idStreet" jdbcType="INTEGER"
			property="streetIdstreet" />
		<result column="ass_nature_idass_nature" jdbcType="INTEGER"
			property="assNatureIdassNature" />
		<result column="ass_discription_idass_discription"
			jdbcType="INTEGER" property="assDiscriptionIdassDiscription" />
		<result column="User_idUser" jdbcType="INTEGER"
			property="userIduser" />
		<result column="assessment_oder" jdbcType="DOUBLE"
			property="assessmentOder" />
		<result column="assessment_no" jdbcType="VARCHAR"
			property="assessmentNo" />
		<result column="assessment_status" jdbcType="INTEGER"
			property="assessmentStatus" />
		<result column="assessment_syn" jdbcType="INTEGER"
			property="assessmentSyn" />
		<result column="assessment_comment" jdbcType="VARCHAR"
			property="assessmentComment" />
		<result column="assessment_obsolete" jdbcType="VARCHAR"
			property="assessmentObsolete" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		idAssessment, Customer_idCustomer, Ward_idWard,
		Street_idStreet,
		ass_nature_idass_nature,
		ass_discription_idass_discription, User_idUser, assessment_oder,
		assessment_no, assessment_status,
		assessment_syn, assessment_comment,
		assessment_obsolete
	</sql>
	<select id="selectByExample"
		parameterType="mc.kurunegala.bop.model.AssessmentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from assessment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from assessment
		where idAssessment = #{idassessment,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from
		assessment
		where idAssessment =
		#{idassessment,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="mc.kurunegala.bop.model.AssessmentExample">
		delete from assessment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="mc.kurunegala.bop.model.Assessment">
		insert into assessment
		(idAssessment,
		Customer_idCustomer,
		Ward_idWard, Street_idStreet,
		ass_nature_idass_nature,
		ass_discription_idass_discription,
		User_idUser,
		assessment_oder, assessment_no, assessment_status,
		assessment_syn, assessment_comment, assessment_obsolete
		)
		values
		(#{idassessment,jdbcType=INTEGER},
		#{customerIdcustomer,jdbcType=INTEGER},
		#{wardIdward,jdbcType=INTEGER}, #{streetIdstreet,jdbcType=INTEGER},
		#{assNatureIdassNature,jdbcType=INTEGER},
		#{assDiscriptionIdassDiscription,jdbcType=INTEGER},
		#{userIduser,jdbcType=INTEGER},
		#{assessmentOder,jdbcType=DOUBLE},
		#{assessmentNo,jdbcType=VARCHAR},
		#{assessmentStatus,jdbcType=INTEGER},
		#{assessmentSyn,jdbcType=INTEGER},
		#{assessmentComment,jdbcType=VARCHAR},
		#{assessmentObsolete,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="mc.kurunegala.bop.model.Assessment">
		insert into assessment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="idassessment != null">
				idAssessment,
			</if>
			<if test="customerIdcustomer != null">
				Customer_idCustomer,
			</if>
			<if test="wardIdward != null">
				Ward_idWard,
			</if>
			<if test="streetIdstreet != null">
				Street_idStreet,
			</if>
			<if test="assNatureIdassNature != null">
				ass_nature_idass_nature,
			</if>
			<if test="assDiscriptionIdassDiscription != null">
				ass_discription_idass_discription,
			</if>
			<if test="userIduser != null">
				User_idUser,
			</if>
			<if test="assessmentOder != null">
				assessment_oder,
			</if>
			<if test="assessmentNo != null">
				assessment_no,
			</if>
			<if test="assessmentStatus != null">
				assessment_status,
			</if>
			<if test="assessmentSyn != null">
				assessment_syn,
			</if>
			<if test="assessmentComment != null">
				assessment_comment,
			</if>
			<if test="assessmentObsolete != null">
				assessment_obsolete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="idassessment != null">
				#{idassessment,jdbcType=INTEGER},
			</if>
			<if test="customerIdcustomer != null">
				#{customerIdcustomer,jdbcType=INTEGER},
			</if>
			<if test="wardIdward != null">
				#{wardIdward,jdbcType=INTEGER},
			</if>
			<if test="streetIdstreet != null">
				#{streetIdstreet,jdbcType=INTEGER},
			</if>
			<if test="assNatureIdassNature != null">
				#{assNatureIdassNature,jdbcType=INTEGER},
			</if>
			<if test="assDiscriptionIdassDiscription != null">
				#{assDiscriptionIdassDiscription,jdbcType=INTEGER},
			</if>
			<if test="userIduser != null">
				#{userIduser,jdbcType=INTEGER},
			</if>
			<if test="assessmentOder != null">
				#{assessmentOder,jdbcType=DOUBLE},
			</if>
			<if test="assessmentNo != null">
				#{assessmentNo,jdbcType=VARCHAR},
			</if>
			<if test="assessmentStatus != null">
				#{assessmentStatus,jdbcType=INTEGER},
			</if>
			<if test="assessmentSyn != null">
				#{assessmentSyn,jdbcType=INTEGER},
			</if>
			<if test="assessmentComment != null">
				#{assessmentComment,jdbcType=VARCHAR},
			</if>
			<if test="assessmentObsolete != null">
				#{assessmentObsolete,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="mc.kurunegala.bop.model.AssessmentExample"
		resultType="java.lang.Long">
		select count(*) from assessment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update assessment
		<set>
			<if test="record.idassessment != null">
				idAssessment = #{record.idassessment,jdbcType=INTEGER},
			</if>
			<if test="record.customerIdcustomer != null">
				Customer_idCustomer =
				#{record.customerIdcustomer,jdbcType=INTEGER},
			</if>
			<if test="record.wardIdward != null">
				Ward_idWard = #{record.wardIdward,jdbcType=INTEGER},
			</if>
			<if test="record.streetIdstreet != null">
				Street_idStreet =
				#{record.streetIdstreet,jdbcType=INTEGER},
			</if>
			<if test="record.assNatureIdassNature != null">
				ass_nature_idass_nature =
				#{record.assNatureIdassNature,jdbcType=INTEGER},
			</if>
			<if test="record.assDiscriptionIdassDiscription != null">
				ass_discription_idass_discription =
				#{record.assDiscriptionIdassDiscription,jdbcType=INTEGER},
			</if>
			<if test="record.userIduser != null">
				User_idUser = #{record.userIduser,jdbcType=INTEGER},
			</if>
			<if test="record.assessmentOder != null">
				assessment_oder =
				#{record.assessmentOder,jdbcType=DOUBLE},
			</if>
			<if test="record.assessmentNo != null">
				assessment_no = #{record.assessmentNo,jdbcType=VARCHAR},
			</if>
			<if test="record.assessmentStatus != null">
				assessment_status =
				#{record.assessmentStatus,jdbcType=INTEGER},
			</if>
			<if test="record.assessmentSyn != null">
				assessment_syn =
				#{record.assessmentSyn,jdbcType=INTEGER},
			</if>
			<if test="record.assessmentComment != null">
				assessment_comment =
				#{record.assessmentComment,jdbcType=VARCHAR},
			</if>
			<if test="record.assessmentObsolete != null">
				assessment_obsolete =
				#{record.assessmentObsolete,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update assessment
		set idAssessment =
		#{record.idassessment,jdbcType=INTEGER},
		Customer_idCustomer =
		#{record.customerIdcustomer,jdbcType=INTEGER},
		Ward_idWard =
		#{record.wardIdward,jdbcType=INTEGER},
		Street_idStreet =
		#{record.streetIdstreet,jdbcType=INTEGER},
		ass_nature_idass_nature =
		#{record.assNatureIdassNature,jdbcType=INTEGER},
		ass_discription_idass_discription =
		#{record.assDiscriptionIdassDiscription,jdbcType=INTEGER},
		User_idUser
		= #{record.userIduser,jdbcType=INTEGER},
		assessment_oder =
		#{record.assessmentOder,jdbcType=DOUBLE},
		assessment_no =
		#{record.assessmentNo,jdbcType=VARCHAR},
		assessment_status =
		#{record.assessmentStatus,jdbcType=INTEGER},
		assessment_syn =
		#{record.assessmentSyn,jdbcType=INTEGER},
		assessment_comment =
		#{record.assessmentComment,jdbcType=VARCHAR},
		assessment_obsolete =
		#{record.assessmentObsolete,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="mc.kurunegala.bop.model.Assessment">
		update assessment
		<set>
			<if test="customerIdcustomer != null">
				Customer_idCustomer =
				#{customerIdcustomer,jdbcType=INTEGER},
			</if>
			<if test="wardIdward != null">
				Ward_idWard = #{wardIdward,jdbcType=INTEGER},
			</if>
			<if test="streetIdstreet != null">
				Street_idStreet = #{streetIdstreet,jdbcType=INTEGER},
			</if>
			<if test="assNatureIdassNature != null">
				ass_nature_idass_nature =
				#{assNatureIdassNature,jdbcType=INTEGER},
			</if>
			<if test="assDiscriptionIdassDiscription != null">
				ass_discription_idass_discription =
				#{assDiscriptionIdassDiscription,jdbcType=INTEGER},
			</if>
			<if test="userIduser != null">
				User_idUser = #{userIduser,jdbcType=INTEGER},
			</if>
			<if test="assessmentOder != null">
				assessment_oder = #{assessmentOder,jdbcType=DOUBLE},
			</if>
			<if test="assessmentNo != null">
				assessment_no = #{assessmentNo,jdbcType=VARCHAR},
			</if>
			<if test="assessmentStatus != null">
				assessment_status = #{assessmentStatus,jdbcType=INTEGER},
			</if>
			<if test="assessmentSyn != null">
				assessment_syn = #{assessmentSyn,jdbcType=INTEGER},
			</if>
			<if test="assessmentComment != null">
				assessment_comment =
				#{assessmentComment,jdbcType=VARCHAR},
			</if>
			<if test="assessmentObsolete != null">
				assessment_obsolete =
				#{assessmentObsolete,jdbcType=VARCHAR},
			</if>
		</set>
		where idAssessment = #{idassessment,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="mc.kurunegala.bop.model.Assessment">
		update assessment
		set Customer_idCustomer =
		#{customerIdcustomer,jdbcType=INTEGER},
		Ward_idWard =
		#{wardIdward,jdbcType=INTEGER},
		Street_idStreet =
		#{streetIdstreet,jdbcType=INTEGER},
		ass_nature_idass_nature =
		#{assNatureIdassNature,jdbcType=INTEGER},
		ass_discription_idass_discription =
		#{assDiscriptionIdassDiscription,jdbcType=INTEGER},
		User_idUser =
		#{userIduser,jdbcType=INTEGER},
		assessment_oder =
		#{assessmentOder,jdbcType=DOUBLE},
		assessment_no =
		#{assessmentNo,jdbcType=VARCHAR},
		assessment_status =
		#{assessmentStatus,jdbcType=INTEGER},
		assessment_syn =
		#{assessmentSyn,jdbcType=INTEGER},
		assessment_comment =
		#{assessmentComment,jdbcType=VARCHAR},
		assessment_obsolete =
		#{assessmentObsolete,jdbcType=VARCHAR}
		where idAssessment =
		#{idassessment,jdbcType=INTEGER}
	</update>

	<select id="selectAllByState" resultMap="ResultMapWithCustomer">
		SELECT * FROM
		assessment
		where assessment_status=#{state} limit 10
	</select>

	<resultMap id="ResultMapWithCustomer" extends="BaseResultMap"
		type="mc.kurunegala.bop.model.Assessment">
		<association column="Customer_idCustomer"
			javaType="mc.kurunegala.bop.model.Customer" property="customer"
			select="mc.kurunegala.bop.dao.CustomerMapper.selectByPrimaryKey" />
	</resultMap>

	<select id="selectbySeracher" resultMap="ResultMapWithCustomer">

		<include refid="seacherSelect" />
		<include refid="searcherWhere" />

	</select>
	<sql id="seacherSelect">
		SELECT ass.* FROM assessment ass
		left join customer cus on
		ass.Customer_idCustomer=cus.idCustomer
		left join ward wrd on
		ass.Ward_idWard=wrd.idWard
		left join street stt on
		ass.Street_idStreet=stt.idStreet
	</sql>

	<sql id="searcherWhere">
		where

		<if test="searcher.ward != '-1'">
			ass.Ward_idWard =#{searcher.ward} and
		</if>
		<if test="searcher.street != '-1'">
			ass.Street_idStreet =#{searcher.street} and
		</if>
		<!-- <if test="searcher.assessmentNo != null searcher.assessmentNo and 
			!= '' "> <bind name="assNo" value=" '%'+ searcher.assessmentNo + '%' " /> 
			ass.assessment_no like #{assNo} and </if> -->

		<if
			test="searcher.assessmentNo != null and searcher.assessmentNo != '' ">
			<bind name="assessNo" value=" '%'+ searcher.assessmentNo + '%'" />
			ass.assessment_no like #{assessNo} and
		</if>

		<if
			test="searcher.customerName != null and searcher.customerName != '' ">
			<bind name="custName" value=" '%'+ searcher.customerName + '%'" />
			cus.cus_name like #{custName} and
		</if>
		<if test="searcher.nic != null and searcher.nic != '' ">
			<bind name="custNic" value=" '%'+ searcher.nic + '%'" />
			cus.cus_nic like #{custNic} and
		</if>
		ass.assessment_status ='1'
	</sql>

	<select id="selectByPrimaryKeyWithCustomer"
		resultMap="ResultMapWithCustomer">
		select
		<include refid="Base_Column_List" />
		from assessment
		where idAssessment = #{idassessment,jdbcType=INTEGER}

	</select>
	
	<!-- <select id="viewMaxAssessmentNo" javaType="java.lang.String">
	select max(assessment_no) from assessment
	</select> -->

</mapper>