<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mc.kurunegala.bop.dao.ApplicationCatagoryMapper">
  <resultMap id="BaseResultMap" type="mc.kurunegala.bop.model.ApplicationCatagory">
    <id column="idApplication_Catagory" jdbcType="INTEGER" property="idapplicationCatagory" />
    <result column="application_name" jdbcType="VARCHAR" property="applicationName" />
    <result column="Application_Catagory_status" jdbcType="INTEGER" property="applicationCatagoryStatus" />
    <result column="Application_Catagory_syn" jdbcType="INTEGER" property="applicationCatagorySyn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idApplication_Catagory, application_name, Application_Catagory_status, Application_Catagory_syn
  </sql>
  <select id="selectByExample" parameterType="mc.kurunegala.bop.model.ApplicationCatagoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from application_catagory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from application_catagory
    where idApplication_Catagory = #{idapplicationCatagory,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from application_catagory
    where idApplication_Catagory = #{idapplicationCatagory,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mc.kurunegala.bop.model.ApplicationCatagoryExample">
    delete from application_catagory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mc.kurunegala.bop.model.ApplicationCatagory">
    insert into application_catagory (idApplication_Catagory, application_name, 
      Application_Catagory_status, Application_Catagory_syn
      )
    values (#{idapplicationCatagory,jdbcType=INTEGER}, #{applicationName,jdbcType=VARCHAR}, 
      #{applicationCatagoryStatus,jdbcType=INTEGER}, #{applicationCatagorySyn,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="mc.kurunegala.bop.model.ApplicationCatagory">
    insert into application_catagory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idapplicationCatagory != null">
        idApplication_Catagory,
      </if>
      <if test="applicationName != null">
        application_name,
      </if>
      <if test="applicationCatagoryStatus != null">
        Application_Catagory_status,
      </if>
      <if test="applicationCatagorySyn != null">
        Application_Catagory_syn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idapplicationCatagory != null">
        #{idapplicationCatagory,jdbcType=INTEGER},
      </if>
      <if test="applicationName != null">
        #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="applicationCatagoryStatus != null">
        #{applicationCatagoryStatus,jdbcType=INTEGER},
      </if>
      <if test="applicationCatagorySyn != null">
        #{applicationCatagorySyn,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mc.kurunegala.bop.model.ApplicationCatagoryExample" resultType="java.lang.Long">
    select count(*) from application_catagory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update application_catagory
    <set>
      <if test="record.idapplicationCatagory != null">
        idApplication_Catagory = #{record.idapplicationCatagory,jdbcType=INTEGER},
      </if>
      <if test="record.applicationName != null">
        application_name = #{record.applicationName,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationCatagoryStatus != null">
        Application_Catagory_status = #{record.applicationCatagoryStatus,jdbcType=INTEGER},
      </if>
      <if test="record.applicationCatagorySyn != null">
        Application_Catagory_syn = #{record.applicationCatagorySyn,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update application_catagory
    set idApplication_Catagory = #{record.idapplicationCatagory,jdbcType=INTEGER},
      application_name = #{record.applicationName,jdbcType=VARCHAR},
      Application_Catagory_status = #{record.applicationCatagoryStatus,jdbcType=INTEGER},
      Application_Catagory_syn = #{record.applicationCatagorySyn,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mc.kurunegala.bop.model.ApplicationCatagory">
    update application_catagory
    <set>
      <if test="applicationName != null">
        application_name = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="applicationCatagoryStatus != null">
        Application_Catagory_status = #{applicationCatagoryStatus,jdbcType=INTEGER},
      </if>
      <if test="applicationCatagorySyn != null">
        Application_Catagory_syn = #{applicationCatagorySyn,jdbcType=INTEGER},
      </if>
    </set>
    where idApplication_Catagory = #{idapplicationCatagory,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mc.kurunegala.bop.model.ApplicationCatagory">
    update application_catagory
    set application_name = #{applicationName,jdbcType=VARCHAR},
      Application_Catagory_status = #{applicationCatagoryStatus,jdbcType=INTEGER},
      Application_Catagory_syn = #{applicationCatagorySyn,jdbcType=INTEGER}
    where idApplication_Catagory = #{idapplicationCatagory,jdbcType=INTEGER}
  </update>
</mapper>